// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: discord-mc-protobuf/proto/mc-management.proto

package proto

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateWhitelistRequest_UpdateWhitelistAction int32

const (
	UpdateWhitelistRequest_UNKNOWN UpdateWhitelistRequest_UpdateWhitelistAction = 0
	UpdateWhitelistRequest_ADD     UpdateWhitelistRequest_UpdateWhitelistAction = 1
	UpdateWhitelistRequest_REMOVE  UpdateWhitelistRequest_UpdateWhitelistAction = 2
)

// Enum value maps for UpdateWhitelistRequest_UpdateWhitelistAction.
var (
	UpdateWhitelistRequest_UpdateWhitelistAction_name = map[int32]string{
		0: "UNKNOWN",
		1: "ADD",
		2: "REMOVE",
	}
	UpdateWhitelistRequest_UpdateWhitelistAction_value = map[string]int32{
		"UNKNOWN": 0,
		"ADD":     1,
		"REMOVE":  2,
	}
)

func (x UpdateWhitelistRequest_UpdateWhitelistAction) Enum() *UpdateWhitelistRequest_UpdateWhitelistAction {
	p := new(UpdateWhitelistRequest_UpdateWhitelistAction)
	*p = x
	return p
}

func (x UpdateWhitelistRequest_UpdateWhitelistAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateWhitelistRequest_UpdateWhitelistAction) Descriptor() protoreflect.EnumDescriptor {
	return file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[0].Descriptor()
}

func (UpdateWhitelistRequest_UpdateWhitelistAction) Type() protoreflect.EnumType {
	return &file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[0]
}

func (x UpdateWhitelistRequest_UpdateWhitelistAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateWhitelistRequest_UpdateWhitelistAction.Descriptor instead.
func (UpdateWhitelistRequest_UpdateWhitelistAction) EnumDescriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{5, 0}
}

type UpdateWhitelistResponse_WhitelistResult int32

const (
	UpdateWhitelistResponse_UNKNOWN       UpdateWhitelistResponse_WhitelistResult = 0
	UpdateWhitelistResponse_INVAL_NAME    UpdateWhitelistResponse_WhitelistResult = 1
	UpdateWhitelistResponse_NONE          UpdateWhitelistResponse_WhitelistResult = 2
	UpdateWhitelistResponse_NO_REMOVE     UpdateWhitelistResponse_WhitelistResult = 3
	UpdateWhitelistResponse_INVAL_MC_USER UpdateWhitelistResponse_WhitelistResult = 4
	UpdateWhitelistResponse_DUP_ADD       UpdateWhitelistResponse_WhitelistResult = 5
	UpdateWhitelistResponse_LIST_OK       UpdateWhitelistResponse_WhitelistResult = 6
	UpdateWhitelistResponse_ADD_OK        UpdateWhitelistResponse_WhitelistResult = 7
	UpdateWhitelistResponse_REM_OK        UpdateWhitelistResponse_WhitelistResult = 8
	UpdateWhitelistResponse_TIMEOUT       UpdateWhitelistResponse_WhitelistResult = 9
)

// Enum value maps for UpdateWhitelistResponse_WhitelistResult.
var (
	UpdateWhitelistResponse_WhitelistResult_name = map[int32]string{
		0: "UNKNOWN",
		1: "INVAL_NAME",
		2: "NONE",
		3: "NO_REMOVE",
		4: "INVAL_MC_USER",
		5: "DUP_ADD",
		6: "LIST_OK",
		7: "ADD_OK",
		8: "REM_OK",
		9: "TIMEOUT",
	}
	UpdateWhitelistResponse_WhitelistResult_value = map[string]int32{
		"UNKNOWN":       0,
		"INVAL_NAME":    1,
		"NONE":          2,
		"NO_REMOVE":     3,
		"INVAL_MC_USER": 4,
		"DUP_ADD":       5,
		"LIST_OK":       6,
		"ADD_OK":        7,
		"REM_OK":        8,
		"TIMEOUT":       9,
	}
)

func (x UpdateWhitelistResponse_WhitelistResult) Enum() *UpdateWhitelistResponse_WhitelistResult {
	p := new(UpdateWhitelistResponse_WhitelistResult)
	*p = x
	return p
}

func (x UpdateWhitelistResponse_WhitelistResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateWhitelistResponse_WhitelistResult) Descriptor() protoreflect.EnumDescriptor {
	return file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[1].Descriptor()
}

func (UpdateWhitelistResponse_WhitelistResult) Type() protoreflect.EnumType {
	return &file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[1]
}

func (x UpdateWhitelistResponse_WhitelistResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateWhitelistResponse_WhitelistResult.Descriptor instead.
func (UpdateWhitelistResponse_WhitelistResult) EnumDescriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{6, 0}
}

type SubscribeResourceConsumptionEventReponse_ResourceEventType int32

const (
	SubscribeResourceConsumptionEventReponse_UNKNOWN         SubscribeResourceConsumptionEventReponse_ResourceEventType = 0
	SubscribeResourceConsumptionEventReponse_CPU_TRIGGER     SubscribeResourceConsumptionEventReponse_ResourceEventType = 1
	SubscribeResourceConsumptionEventReponse_MEM_TRIGGER     SubscribeResourceConsumptionEventReponse_ResourceEventType = 2
	SubscribeResourceConsumptionEventReponse_STORAGE_TRIGGER SubscribeResourceConsumptionEventReponse_ResourceEventType = 3
)

// Enum value maps for SubscribeResourceConsumptionEventReponse_ResourceEventType.
var (
	SubscribeResourceConsumptionEventReponse_ResourceEventType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CPU_TRIGGER",
		2: "MEM_TRIGGER",
		3: "STORAGE_TRIGGER",
	}
	SubscribeResourceConsumptionEventReponse_ResourceEventType_value = map[string]int32{
		"UNKNOWN":         0,
		"CPU_TRIGGER":     1,
		"MEM_TRIGGER":     2,
		"STORAGE_TRIGGER": 3,
	}
)

func (x SubscribeResourceConsumptionEventReponse_ResourceEventType) Enum() *SubscribeResourceConsumptionEventReponse_ResourceEventType {
	p := new(SubscribeResourceConsumptionEventReponse_ResourceEventType)
	*p = x
	return p
}

func (x SubscribeResourceConsumptionEventReponse_ResourceEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeResourceConsumptionEventReponse_ResourceEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[2].Descriptor()
}

func (SubscribeResourceConsumptionEventReponse_ResourceEventType) Type() protoreflect.EnumType {
	return &file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[2]
}

func (x SubscribeResourceConsumptionEventReponse_ResourceEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeResourceConsumptionEventReponse_ResourceEventType.Descriptor instead.
func (SubscribeResourceConsumptionEventReponse_ResourceEventType) EnumDescriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{14, 0}
}

type SubscribeHeartbeatResponse_SystemStatus int32

const (
	SubscribeHeartbeatResponse_UNKNOWN     SubscribeHeartbeatResponse_SystemStatus = 0
	SubscribeHeartbeatResponse_BOOTING     SubscribeHeartbeatResponse_SystemStatus = 1
	SubscribeHeartbeatResponse_RUNNING     SubscribeHeartbeatResponse_SystemStatus = 2
	SubscribeHeartbeatResponse_SIGNAL_STOP SubscribeHeartbeatResponse_SystemStatus = 3
	SubscribeHeartbeatResponse_FATAL_STOP  SubscribeHeartbeatResponse_SystemStatus = 4
)

// Enum value maps for SubscribeHeartbeatResponse_SystemStatus.
var (
	SubscribeHeartbeatResponse_SystemStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "BOOTING",
		2: "RUNNING",
		3: "SIGNAL_STOP",
		4: "FATAL_STOP",
	}
	SubscribeHeartbeatResponse_SystemStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"BOOTING":     1,
		"RUNNING":     2,
		"SIGNAL_STOP": 3,
		"FATAL_STOP":  4,
	}
)

func (x SubscribeHeartbeatResponse_SystemStatus) Enum() *SubscribeHeartbeatResponse_SystemStatus {
	p := new(SubscribeHeartbeatResponse_SystemStatus)
	*p = x
	return p
}

func (x SubscribeHeartbeatResponse_SystemStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeHeartbeatResponse_SystemStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[3].Descriptor()
}

func (SubscribeHeartbeatResponse_SystemStatus) Type() protoreflect.EnumType {
	return &file_discord_mc_protobuf_proto_mc_management_proto_enumTypes[3]
}

func (x SubscribeHeartbeatResponse_SystemStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeHeartbeatResponse_SystemStatus.Descriptor instead.
func (SubscribeHeartbeatResponse_SystemStatus) EnumDescriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{16, 0}
}

type PlayerCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PlayerCount uint32               `protobuf:"varint,2,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
	PlayerNames []string             `protobuf:"bytes,3,rep,name=player_names,json=playerNames,proto3" json:"player_names,omitempty"`
}

func (x *PlayerCount) Reset() {
	*x = PlayerCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCount) ProtoMessage() {}

func (x *PlayerCount) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCount.ProtoReflect.Descriptor instead.
func (*PlayerCount) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerCount) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PlayerCount) GetPlayerCount() uint32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *PlayerCount) GetPlayerNames() []string {
	if x != nil {
		return x.PlayerNames
	}
	return nil
}

type GetPlayerCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerCountRequest) Reset() {
	*x = GetPlayerCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerCountRequest) ProtoMessage() {}

func (x *GetPlayerCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerCountRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerCountRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{1}
}

type GetPlayerCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *PlayerCount `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetPlayerCountResponse) Reset() {
	*x = GetPlayerCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerCountResponse) ProtoMessage() {}

func (x *GetPlayerCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerCountResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerCountResponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlayerCountResponse) GetResponse() *PlayerCount {
	if x != nil {
		return x.Response
	}
	return nil
}

type SubscribePlayerCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribePlayerCountRequest) Reset() {
	*x = SubscribePlayerCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePlayerCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePlayerCountRequest) ProtoMessage() {}

func (x *SubscribePlayerCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePlayerCountRequest.ProtoReflect.Descriptor instead.
func (*SubscribePlayerCountRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{3}
}

type SubscribePlayerCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *PlayerCount `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SubscribePlayerCountResponse) Reset() {
	*x = SubscribePlayerCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePlayerCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePlayerCountResponse) ProtoMessage() {}

func (x *SubscribePlayerCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePlayerCountResponse.ProtoReflect.Descriptor instead.
func (*SubscribePlayerCountResponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribePlayerCountResponse) GetResponse() *PlayerCount {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action     UpdateWhitelistRequest_UpdateWhitelistAction `protobuf:"varint,1,opt,name=action,proto3,enum=UpdateWhitelistRequest_UpdateWhitelistAction" json:"action,omitempty"`
	PlayerName string                                       `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
}

func (x *UpdateWhitelistRequest) Reset() {
	*x = UpdateWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWhitelistRequest) ProtoMessage() {}

func (x *UpdateWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWhitelistRequest.ProtoReflect.Descriptor instead.
func (*UpdateWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateWhitelistRequest) GetAction() UpdateWhitelistRequest_UpdateWhitelistAction {
	if x != nil {
		return x.Action
	}
	return UpdateWhitelistRequest_UNKNOWN
}

func (x *UpdateWhitelistRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type UpdateWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  *timestamp.Timestamp                    `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Response   string                                  `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	ResultCode UpdateWhitelistResponse_WhitelistResult `protobuf:"varint,3,opt,name=result_code,json=resultCode,proto3,enum=UpdateWhitelistResponse_WhitelistResult" json:"result_code,omitempty"`
	Whitelist  []string                                `protobuf:"bytes,4,rep,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *UpdateWhitelistResponse) Reset() {
	*x = UpdateWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWhitelistResponse) ProtoMessage() {}

func (x *UpdateWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWhitelistResponse.ProtoReflect.Descriptor instead.
func (*UpdateWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateWhitelistResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UpdateWhitelistResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *UpdateWhitelistResponse) GetResultCode() UpdateWhitelistResponse_WhitelistResult {
	if x != nil {
		return x.ResultCode
	}
	return UpdateWhitelistResponse_UNKNOWN
}

func (x *UpdateWhitelistResponse) GetWhitelist() []string {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type PlayerDeathEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PlayerDeathEvent) Reset() {
	*x = PlayerDeathEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDeathEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDeathEvent) ProtoMessage() {}

func (x *PlayerDeathEvent) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDeathEvent.ProtoReflect.Descriptor instead.
func (*PlayerDeathEvent) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerDeathEvent) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerDeathEvent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SubscribePlayerEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribePlayerEventRequest) Reset() {
	*x = SubscribePlayerEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePlayerEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePlayerEventRequest) ProtoMessage() {}

func (x *SubscribePlayerEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePlayerEventRequest.ProtoReflect.Descriptor instead.
func (*SubscribePlayerEventRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{8}
}

type SubscribePlayerEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Event:
	//	*SubscribePlayerEventResponse_DeathEvent
	Event isSubscribePlayerEventResponse_Event `protobuf_oneof:"event"`
}

func (x *SubscribePlayerEventResponse) Reset() {
	*x = SubscribePlayerEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePlayerEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePlayerEventResponse) ProtoMessage() {}

func (x *SubscribePlayerEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePlayerEventResponse.ProtoReflect.Descriptor instead.
func (*SubscribePlayerEventResponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribePlayerEventResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *SubscribePlayerEventResponse) GetEvent() isSubscribePlayerEventResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SubscribePlayerEventResponse) GetDeathEvent() *PlayerDeathEvent {
	if x, ok := x.GetEvent().(*SubscribePlayerEventResponse_DeathEvent); ok {
		return x.DeathEvent
	}
	return nil
}

type isSubscribePlayerEventResponse_Event interface {
	isSubscribePlayerEventResponse_Event()
}

type SubscribePlayerEventResponse_DeathEvent struct {
	DeathEvent *PlayerDeathEvent `protobuf:"bytes,2,opt,name=death_event,json=deathEvent,proto3,oneof"` // other events?
}

func (*SubscribePlayerEventResponse_DeathEvent) isSubscribePlayerEventResponse_Event() {}

type ResourceConsumption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUsageAvg  float32 `protobuf:"fixed32,2,opt,name=cpu_usage_avg,json=cpuUsageAvg,proto3" json:"cpu_usage_avg,omitempty"`
	MemUsageAvg  float32 `protobuf:"fixed32,3,opt,name=mem_usage_avg,json=memUsageAvg,proto3" json:"mem_usage_avg,omitempty"`
	StorageUsage float32 `protobuf:"fixed32,4,opt,name=storage_usage,json=storageUsage,proto3" json:"storage_usage,omitempty"` // TODO: more detailed summary
}

func (x *ResourceConsumption) Reset() {
	*x = ResourceConsumption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceConsumption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceConsumption) ProtoMessage() {}

func (x *ResourceConsumption) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceConsumption.ProtoReflect.Descriptor instead.
func (*ResourceConsumption) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceConsumption) GetCpuUsageAvg() float32 {
	if x != nil {
		return x.CpuUsageAvg
	}
	return 0
}

func (x *ResourceConsumption) GetMemUsageAvg() float32 {
	if x != nil {
		return x.MemUsageAvg
	}
	return 0
}

func (x *ResourceConsumption) GetStorageUsage() float32 {
	if x != nil {
		return x.StorageUsage
	}
	return 0
}

type GetResourceConsumptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetResourceConsumptionRequest) Reset() {
	*x = GetResourceConsumptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceConsumptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceConsumptionRequest) ProtoMessage() {}

func (x *GetResourceConsumptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceConsumptionRequest.ProtoReflect.Descriptor instead.
func (*GetResourceConsumptionRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{11}
}

type GetResourceConsumptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Response  *ResourceConsumption `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetResourceConsumptionResponse) Reset() {
	*x = GetResourceConsumptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceConsumptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceConsumptionResponse) ProtoMessage() {}

func (x *GetResourceConsumptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceConsumptionResponse.ProtoReflect.Descriptor instead.
func (*GetResourceConsumptionResponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{12}
}

func (x *GetResourceConsumptionResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetResourceConsumptionResponse) GetResponse() *ResourceConsumption {
	if x != nil {
		return x.Response
	}
	return nil
}

type SubscribeResourceConsumptionEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeResourceConsumptionEventRequest) Reset() {
	*x = SubscribeResourceConsumptionEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResourceConsumptionEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResourceConsumptionEventRequest) ProtoMessage() {}

func (x *SubscribeResourceConsumptionEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResourceConsumptionEventRequest.ProtoReflect.Descriptor instead.
func (*SubscribeResourceConsumptionEventRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{13}
}

type SubscribeResourceConsumptionEventReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp                                       `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Event     SubscribeResourceConsumptionEventReponse_ResourceEventType `protobuf:"varint,2,opt,name=event,proto3,enum=SubscribeResourceConsumptionEventReponse_ResourceEventType" json:"event,omitempty"`
	Response  *ResourceConsumption                                       `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SubscribeResourceConsumptionEventReponse) Reset() {
	*x = SubscribeResourceConsumptionEventReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResourceConsumptionEventReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResourceConsumptionEventReponse) ProtoMessage() {}

func (x *SubscribeResourceConsumptionEventReponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResourceConsumptionEventReponse.ProtoReflect.Descriptor instead.
func (*SubscribeResourceConsumptionEventReponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{14}
}

func (x *SubscribeResourceConsumptionEventReponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SubscribeResourceConsumptionEventReponse) GetEvent() SubscribeResourceConsumptionEventReponse_ResourceEventType {
	if x != nil {
		return x.Event
	}
	return SubscribeResourceConsumptionEventReponse_UNKNOWN
}

func (x *SubscribeResourceConsumptionEventReponse) GetResponse() *ResourceConsumption {
	if x != nil {
		return x.Response
	}
	return nil
}

type SubscribeHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeartbeatDurationSecAtleast *duration.Duration `protobuf:"bytes,1,opt,name=heartbeat_duration_sec_atleast,json=heartbeatDurationSecAtleast,proto3" json:"heartbeat_duration_sec_atleast,omitempty"`
}

func (x *SubscribeHeartbeatRequest) Reset() {
	*x = SubscribeHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeHeartbeatRequest) ProtoMessage() {}

func (x *SubscribeHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*SubscribeHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{15}
}

func (x *SubscribeHeartbeatRequest) GetHeartbeatDurationSecAtleast() *duration.Duration {
	if x != nil {
		return x.HeartbeatDurationSecAtleast
	}
	return nil
}

type SubscribeHeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp                    `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status    SubscribeHeartbeatResponse_SystemStatus `protobuf:"varint,2,opt,name=status,proto3,enum=SubscribeHeartbeatResponse_SystemStatus" json:"status,omitempty"`
}

func (x *SubscribeHeartbeatResponse) Reset() {
	*x = SubscribeHeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeHeartbeatResponse) ProtoMessage() {}

func (x *SubscribeHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*SubscribeHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP(), []int{16}
}

func (x *SubscribeHeartbeatResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SubscribeHeartbeatResponse) GetStatus() SubscribeHeartbeatResponse_SystemStatus {
	if x != nil {
		return x.Status
	}
	return SubscribeHeartbeatResponse_UNKNOWN
}

var File_discord_mc_protobuf_proto_mc_management_proto protoreflect.FileDescriptor

var file_discord_mc_protobuf_proto_mc_management_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2d, 0x6d, 0x63, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x63, 0x2d, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x1c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x10, 0x02, 0x22, 0xf4, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x99, 0x01, 0x0a, 0x0f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f,
	0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x5f, 0x4d, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x55, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x4f, 0x4b, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x44, 0x5f, 0x4f, 0x4b,
	0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x5f, 0x4f, 0x4b, 0x10, 0x08, 0x12, 0x0b,
	0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x09, 0x22, 0x45, 0x0a, 0x10, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x97, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x0b,
	0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74, 0x68, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x61, 0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x76, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x76, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x0a, 0x28, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc2, 0x02, 0x0a,
	0x28, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x51, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x50,
	0x55, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d,
	0x45, 0x4d, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10,
	0x03, 0x22, 0x7b, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e,
	0x0a, 0x1e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x5f, 0x61, 0x74, 0x6c, 0x65, 0x61, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1b, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x41, 0x74, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x22, 0xf0,
	0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10,
	0x04, 0x32, 0xfc, 0x04, 0x0a, 0x0c, 0x4d, 0x43, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x46, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d,
	0x0a, 0x21, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x51, 0x0a,
	0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x1a, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x6b, 0x65, 0x79, 0x64, 0x65, 0x76, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2d, 0x6d, 0x63, 0x2d, 0x62, 0x6f, 0x74, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2d, 0x6d, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discord_mc_protobuf_proto_mc_management_proto_rawDescOnce sync.Once
	file_discord_mc_protobuf_proto_mc_management_proto_rawDescData = file_discord_mc_protobuf_proto_mc_management_proto_rawDesc
)

func file_discord_mc_protobuf_proto_mc_management_proto_rawDescGZIP() []byte {
	file_discord_mc_protobuf_proto_mc_management_proto_rawDescOnce.Do(func() {
		file_discord_mc_protobuf_proto_mc_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_discord_mc_protobuf_proto_mc_management_proto_rawDescData)
	})
	return file_discord_mc_protobuf_proto_mc_management_proto_rawDescData
}

var file_discord_mc_protobuf_proto_mc_management_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_discord_mc_protobuf_proto_mc_management_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_discord_mc_protobuf_proto_mc_management_proto_goTypes = []interface{}{
	(UpdateWhitelistRequest_UpdateWhitelistAction)(0),               // 0: UpdateWhitelistRequest.UpdateWhitelistAction
	(UpdateWhitelistResponse_WhitelistResult)(0),                    // 1: UpdateWhitelistResponse.WhitelistResult
	(SubscribeResourceConsumptionEventReponse_ResourceEventType)(0), // 2: SubscribeResourceConsumptionEventReponse.ResourceEventType
	(SubscribeHeartbeatResponse_SystemStatus)(0),                    // 3: SubscribeHeartbeatResponse.SystemStatus
	(*PlayerCount)(nil),                              // 4: PlayerCount
	(*GetPlayerCountRequest)(nil),                    // 5: GetPlayerCountRequest
	(*GetPlayerCountResponse)(nil),                   // 6: GetPlayerCountResponse
	(*SubscribePlayerCountRequest)(nil),              // 7: SubscribePlayerCountRequest
	(*SubscribePlayerCountResponse)(nil),             // 8: SubscribePlayerCountResponse
	(*UpdateWhitelistRequest)(nil),                   // 9: UpdateWhitelistRequest
	(*UpdateWhitelistResponse)(nil),                  // 10: UpdateWhitelistResponse
	(*PlayerDeathEvent)(nil),                         // 11: PlayerDeathEvent
	(*SubscribePlayerEventRequest)(nil),              // 12: SubscribePlayerEventRequest
	(*SubscribePlayerEventResponse)(nil),             // 13: SubscribePlayerEventResponse
	(*ResourceConsumption)(nil),                      // 14: ResourceConsumption
	(*GetResourceConsumptionRequest)(nil),            // 15: GetResourceConsumptionRequest
	(*GetResourceConsumptionResponse)(nil),           // 16: GetResourceConsumptionResponse
	(*SubscribeResourceConsumptionEventRequest)(nil), // 17: SubscribeResourceConsumptionEventRequest
	(*SubscribeResourceConsumptionEventReponse)(nil), // 18: SubscribeResourceConsumptionEventReponse
	(*SubscribeHeartbeatRequest)(nil),                // 19: SubscribeHeartbeatRequest
	(*SubscribeHeartbeatResponse)(nil),               // 20: SubscribeHeartbeatResponse
	(*timestamp.Timestamp)(nil),                      // 21: google.protobuf.Timestamp
	(*duration.Duration)(nil),                        // 22: google.protobuf.Duration
}
var file_discord_mc_protobuf_proto_mc_management_proto_depIdxs = []int32{
	21, // 0: PlayerCount.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 1: GetPlayerCountResponse.response:type_name -> PlayerCount
	4,  // 2: SubscribePlayerCountResponse.response:type_name -> PlayerCount
	0,  // 3: UpdateWhitelistRequest.action:type_name -> UpdateWhitelistRequest.UpdateWhitelistAction
	21, // 4: UpdateWhitelistResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 5: UpdateWhitelistResponse.result_code:type_name -> UpdateWhitelistResponse.WhitelistResult
	21, // 6: SubscribePlayerEventResponse.timestamp:type_name -> google.protobuf.Timestamp
	11, // 7: SubscribePlayerEventResponse.death_event:type_name -> PlayerDeathEvent
	21, // 8: GetResourceConsumptionResponse.timestamp:type_name -> google.protobuf.Timestamp
	14, // 9: GetResourceConsumptionResponse.response:type_name -> ResourceConsumption
	21, // 10: SubscribeResourceConsumptionEventReponse.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 11: SubscribeResourceConsumptionEventReponse.event:type_name -> SubscribeResourceConsumptionEventReponse.ResourceEventType
	14, // 12: SubscribeResourceConsumptionEventReponse.response:type_name -> ResourceConsumption
	22, // 13: SubscribeHeartbeatRequest.heartbeat_duration_sec_atleast:type_name -> google.protobuf.Duration
	21, // 14: SubscribeHeartbeatResponse.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 15: SubscribeHeartbeatResponse.status:type_name -> SubscribeHeartbeatResponse.SystemStatus
	5,  // 16: MCManagement.GetPlayerCount:input_type -> GetPlayerCountRequest
	7,  // 17: MCManagement.SubscribePlayerCount:input_type -> SubscribePlayerCountRequest
	9,  // 18: MCManagement.UpdateWhitelist:input_type -> UpdateWhitelistRequest
	12, // 19: MCManagement.SubscribePlayerEvent:input_type -> SubscribePlayerEventRequest
	15, // 20: MCManagement.GetResourceConsumption:input_type -> GetResourceConsumptionRequest
	17, // 21: MCManagement.SubscribeResourceConsumptionEvent:input_type -> SubscribeResourceConsumptionEventRequest
	19, // 22: MCManagement.SubscribeHeartbeat:input_type -> SubscribeHeartbeatRequest
	6,  // 23: MCManagement.GetPlayerCount:output_type -> GetPlayerCountResponse
	8,  // 24: MCManagement.SubscribePlayerCount:output_type -> SubscribePlayerCountResponse
	10, // 25: MCManagement.UpdateWhitelist:output_type -> UpdateWhitelistResponse
	13, // 26: MCManagement.SubscribePlayerEvent:output_type -> SubscribePlayerEventResponse
	16, // 27: MCManagement.GetResourceConsumption:output_type -> GetResourceConsumptionResponse
	18, // 28: MCManagement.SubscribeResourceConsumptionEvent:output_type -> SubscribeResourceConsumptionEventReponse
	20, // 29: MCManagement.SubscribeHeartbeat:output_type -> SubscribeHeartbeatResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_discord_mc_protobuf_proto_mc_management_proto_init() }
func file_discord_mc_protobuf_proto_mc_management_proto_init() {
	if File_discord_mc_protobuf_proto_mc_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePlayerCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePlayerCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDeathEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePlayerEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePlayerEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceConsumption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceConsumptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceConsumptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResourceConsumptionEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResourceConsumptionEventReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeHeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_discord_mc_protobuf_proto_mc_management_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SubscribePlayerEventResponse_DeathEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discord_mc_protobuf_proto_mc_management_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discord_mc_protobuf_proto_mc_management_proto_goTypes,
		DependencyIndexes: file_discord_mc_protobuf_proto_mc_management_proto_depIdxs,
		EnumInfos:         file_discord_mc_protobuf_proto_mc_management_proto_enumTypes,
		MessageInfos:      file_discord_mc_protobuf_proto_mc_management_proto_msgTypes,
	}.Build()
	File_discord_mc_protobuf_proto_mc_management_proto = out.File
	file_discord_mc_protobuf_proto_mc_management_proto_rawDesc = nil
	file_discord_mc_protobuf_proto_mc_management_proto_goTypes = nil
	file_discord_mc_protobuf_proto_mc_management_proto_depIdxs = nil
}
